openapi: 3.0.0
info:
  title: trackr API
  description: 
    The trackr API enables you to write data to a field in a project of your
    choice. The API can be called just with any HTTP Client, like Postman,
    Insomnia, or even right here in the browser.
  version: 1.0.0
servers:
  - url: http://api_path/
paths:
  /api/values/:
    get:
      summary: Returns a list of values associated to a field in a project.
      description: Returns a list of values associated to a field in a project. 
                   You can sort the values, offset the values and limit the number of values shown.
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: "**API Key**. The API key that is used to authorize your request."
        - in: query
          name: fieldId
          required: true
          schema:
            type: number
          description: "**Field ID**. Determines which field the values correspond to."
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            minimum: 0
            example: 0
          description: "**Offset**. The number of values you wish to offset by."
        - in: query
          name: limit
          required: true
          schema:
            type: number
            minimum: 0
            example: 100
          description: "**Limit**. The number of values to show at a time."
        - in: query
          name: order
          required: true
          schema:
            type: string
            enum: [asc, desc]
          description: "**Order**. The sort order you wish to list the values in."
          example: asc
          
      responses:
        200:
          description: An object containing the total number of values 
                       that are in the field and a list of the values 
                       that were requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      $ref: '#/components/schemas/Value'
                  totalValues:
                    type: integer
                    example: 1
        400:
          description: A client-side error.
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/Error'
        500:
          description: A server-side error.
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/Error'
    post:
      summary: Adds a value to a field in a project.
      description: Adds a value to a field in a project using the field's ID.
      requestBody:
        description: The request body containing the field's ID, the project's
                     API key, and the value you wish to add.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
                  description: "**API Key**. The API key that is used to authorize your request." 
                fieldId:
                  type: number
                  description: "**Field ID**. Determines which field to add the value to."
                value:
                  type: number
                  description: "**Value**. The numeric value you wish to add."
              required:
                - apiKey
                - fieldId
                - value
      responses:
        200:
          description: An empty object indicating a successful operation.
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/Success'
        400:
          description: A client-side error.
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/Error'
        429:
          description: A rate-limit error. You will need to wait a bit until you can add values again.
                       You can view your rate-limit in the [user settings page](/settings).
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/Error'
        500:
          description: A server-side error.
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Value:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: The ID of the value.
        value:
          type: number
          example: 21.50
          description: The actual value stored.
        createdAt:
          type: string
          example: "2022-11-07T13:56:52.1430884-06:00"
          description: The date and time when the value was created. 
    Error:
      type: object
      properties:
        error:
          type: string
          example: Invalid request parameters provided.
          description: The explanation of the error.
    Success:
      type: object
    